#!/bin/bash
#Création le 08/05/2015 -- https://github.com/Maeda1/boinc

#But : reprend les UT d'un projet au choix qui sont en attente pour les finir

#A CHANGER : dossier de travail de Boinc
boincdos="/media/Calculs/boinc"

#initialisation
ok=0
count_arg=1

#Recherche d'un argument précisant déjà l'URL du projet, si trouvé = pas de question posée
for arg in "$@"
do
	if [ "$(echo $arg | grep "^http")" ];then
		url_prj="$arg"
	elif [ "$(echo `date -d "$arg"`)" ];then
		hms="$arg"
	elif [ "$arg" -gt 1 -a "$arg" -le 32768 ];then
		testpid="OK"
		killsusp="$arg"
	fi
	let "count_arg++"
	if [ $count_arg -gt 3 ];then
		break
	fi
done

#Vérification si on peut bypasser les questions grâce aux arguments
echo "$url_prj"
echo "$hms"
echo "$killsusp"
if [ ! -z "$hms" -a ! -z "$url_prj" ];then
	ok="OK"
	echo "$ok"
fi
if [ -z "$killsusp" ];then
	echo "-> Pas de PID, on ne tuera pas de suspend_calc !"
fi

#Choix projet
while [ "$ok" != "OK" ]
do
	echo "> Choix du projet cible <"
	boinccmd --get_project_status | grep -A 1 "\-----------" | more
	echo "> Entrer le choix voulu par le nombre correspondant < (0=quitter)"
	read chx_prj
	if [ $chx_prj = 0 ];then
		exit
	fi
	if [ "$(boinccmd --get_project_status | grep -A 1 "^$chx_prj) ")" = "" ];then
		echo "Erreur de saisie, ce choix n'existe pas"
		sleep 2
	else
		echo "> Heure exacte à laquelle reprendre les calculs [taper ENTREE pour action immédiate] < /!\ format = mm/jj/aaaa hh:mm"
		read hms
		echo "============="
		echo "Votre choix :"
		echo " $(boinccmd --get_project_status | grep -A 1 "^$chx_prj) ")"
		echo "-> REPRISE des calculs = $hms"
		echo "============="
		url_prj="$(boinccmd --get_project_status | grep -A 2 "^$chx_prj) " | grep URL | cut -d " " -f6)"
		echo "Est-ce OK ? (taper OK)"
		read ok
		if [ "$(ps -eo pid,comm | grep suspend_calc)" ];then
			echo "== Script suspend_calc détecté =="
			echo "$(ps -h| grep "[s]uspend_")"
			echo "Entrer le nombre correspondant pour tuer le processus à l'heure définie : (taper ENTREE pour ne rien tuer et continuer)"
			read killsusp
			testpid="$(pgrep suspend_ | grep -Fx $killsusp)"
			if [ -z "$testpid" -a ! -z "$killsusp" ];then
				echo "Problème avec le PID : mauvaise saisie, on repart du début"
				ok="NOK"
				unset killsusp
				sleep 3
			fi
		fi
	fi
done

#Attente avant Heure H
if [ ! -z "$hms" ];then
	debut=$(date +%s)
	fin=$(date -d "$hms" +%s)
	attente=$(($fin-$debut))
	echo "`date` => Attente de : $attente secondes"
	sleep $attente
fi
#Traitements
if [ ! -z "$testpid" ];then
	echo "On tue le suspend_calc demandé"
	kill $killsusp
	sleep 3
	if [ "$(ps -eo pid,comm | grep $killsusp)" ];then
		kill -9 $killsusp
		sleep 3
	fi
	if [ "$(ps -eo pid,comm | grep $killsusp)" ];then
		echo "! Problème pour tuer le suspend_calc !"
		exit 1
	fi
fi
echo "Reprise des calculs..."

#Sélection des UT suspendues
boinccmd --get_tasks | grep -B 12 -A 8 "suspended via GUI: yes" | grep -B 2 "$url_prj" | grep '^[[:blank:]]*name:' | cut -d " " -f5 > /tmp/tasklist
#Reprise des calculs
while read ligne
do
	echo "[`date "+%d%m%y %H:%M:%S"`] Reprise de : $ligne"
	cd $boincdos
	boinccmd --task "$url_prj" $ligne resume
done < "/tmp/tasklist"
echo "Fin script"
exit 0

